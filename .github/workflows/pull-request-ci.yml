name: Compile and Test OpenGR

defaults:
  run:
    shell: bash

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cc: "cl.exe", cxx: "cl.exe", chealpix: "OFF", boost: "ON", icon: "Windows"}
          - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++", chealpix: "OFF", boost: "ON", icon: "Linux" }
          - { name: "Ubuntu clang", os: ubuntu-latest, cc: "clang", cxx: "clang++", chealpix: "OFF", boost: "ON", icon: "Linux" }
          #- { name: "MacOS clang", os: macos-latest, cc: "clang", cxx: "clang++", chealpix: "OFF", boost: "ON", icon: "Apple" }

          - { name: "Windows MSVC NoBoost", os: windows-latest, cc: "cl.exe", cxx: "cl.exe", chealpix: "OFF", boost: "OFF", icon: "Windows"}
          - { name: "Ubuntu gcc NoBoost", os: ubuntu-latest, cc: "gcc", cxx: "g++", chealpix: "OFF", boost: "OFF", icon: "Linux" }
          - { name: "Ubuntu clang NoBoost", os: ubuntu-latest, cc: "clang", cxx: "clang++", chealpix: "OFF", boost: "OFF", icon: "Linux" }
          - { name: "MacOS clang NoBoost", os: macos-latest, cc: "clang", cxx: "clang++", chealpix: "OFF", boost: "OFF", icon: "Apple" }

          - { name: "Windows MSVC Chealpix", os: windows-latest, cc: "cl.exe", cxx: "cl.exe", chealpix: "ON", boost: "ON", icon: "Windows"}
          - { name: "Ubuntu gcc Chealpix", os: ubuntu-latest, cc: "gcc", cxx: "g++", chealpix: "ON", boost: "ON", icon: "Linux" }
          - { name: "Ubuntu clang Chealpix", os: ubuntu-latest, cc: "clang", cxx: "clang++", chealpix: "ON", boost: "ON", icon: "Linux" }
          - { name: "MacOS clang Chealpix", os: macos-latest, cc: "clang", cxx: "clang++", chealpix: "OFF", boost: "ON", icon: "Apple" }
    steps:
      - uses: seanmiddleditch/gha-setup-ninja@master
        
      - name: Add msbuild to PATH
        uses: seanmiddleditch/gha-setup-vsdevenv@master
        if: runner.os == 'Windows'

      - name: Prepare directories
        run: |
          mkdir -p install/
          mkdir -p src/opengr
          mkdir -p build/opengr
      - name: Checkout remote head
        uses: actions/checkout@master
        with:
          path: src/opengr
      
      
      - name: Download and install Boost
        uses: MarkusJx/install-boost@v1.0
        if: ${{ matrix.config.boost == 'ON'}}
        with:
          # The boost version to install, e.g. "1.73.0"
          boost_version: 1.73.0
          
      - name: Configure OpenGR
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: |
          cd build/opengr
          echo "BOOST_ROOT= $BOOST_ROOT"
          ls $BOOST_ROOT/*
          cmake ../../src/opengr -GNinja -DCMAKE_CXX_COMPILER=${{ matrix.config.cxx }} -DCMAKE_C_COMPILER=${{ matrix.config.cc }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../../install/ -DOpenGR_COMPILE_TESTS=TRUE -DIO_USE_BOOST=${{ matrix.config.boost }} -DENABLE_TIMING=FALSE -DOpenGR_USE_CHEALPIX=${{ matrix.config.chealpix }} -DDL_DATASETS=FALSE
      - name: Build OpenGR
        run: |
          cd build/opengr
          cmake --build . --parallel --config Release --target install
      - name: Compile unit tests
        if: ${{ matrix.config.chealpix == 'OFF'}}
        run: |
          cd build/opengr
          cmake --build . --parallel --config Release --target buildtests
      - name: Run unit tests
        if: ${{ matrix.config.chealpix == 'OFF'}}
        run: |
          cd build/opengr
          cmake --build . --parallel --config Release --target test


